<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.test1.mapper.BoardMapper">
		
	<select id="selectPaging" parameterType="hashmap" resultType="int">		
							<!--com.example.test1 <- 프로젝트명 / model 밑에 student-->
		SELECT count(*) AS CNT
		FROM TBL_BOARD B
    	INNER JOIN TBL_USER U ON U.userId = B.userId
    	WHERE 1=1 
    	<if test="category != '' and category != null">
    	AND CATEGORY = #{category}
    	</if>  
    	<if test="boardType == 'all'">
   		AND (TITLE LIKE '%' || #{search} || '%' OR USERNAME LIKE '%' || #{search} || '%')      
        </if>
        <if test="boardType == 'title'">
        AND TITLE LIKE '%' || #{search} || '%'
        </if>
        <if test="boardType == 'userName'">
     	AND USERNAME LIKE '%' || #{search} || '%'
        </if>
        ORDER BY CDATETIME DESC
	</select>	
	
	 <!-- 게시판 삭제 -->
    <delete id="deleteBoard" parameterType="hashmap">
    
        delete 
        from TBL_BOARD 
        where BOARDNO = #{boardNo}
    
    </delete>
    
 	<insert id="insertBoard" parameterType="hashmap" useGeneratedKeys="true" keyProperty="boardNo" keyColumn="boardNo">
 	
    INSERT INTO TBL_BOARD (BOARDNO, TITLE, CONTENTS, HIT, USERID, CDATETIME, UDATETIME)
    VALUES (board_seq.NEXTVAL, #{TITLE}, #{CONTENTS}, 0, #{userId}, SYSDATE, SYSDATE)
	
	</insert>

	<select id="searchBoardList" parameterType="hashmap" resultType="com.example.test1.model.Board">
  
    SELECT B.*,C2.*,U.*,
    CASE 
    WHEN TO_CHAR(CDATETIME, 'YYYY-MM-DD') = 
    TO_CHAR(SYSDATE, 'YYYY-MM-DD') THEN TO_CHAR(CDATETIME, 'HH24:MI:SS')
    ELSE TO_CHAR(CDATETIME, 'YYYY-MM-DD')
    END AS CDATETIME2
    FROM TBL_BOARD B
    INNER JOIN TBL_USER U ON U.userId = B.userId
    LEFT JOIN(
	SELECT B.BOARDNO,B1.CNT
    FROM TBL_BOARD B
    INNER JOIN (
        SELECT BOARDNO, COUNT(*) AS CNT
        FROM TBL_COMMENT
        GROUP BY BOARDNO
    ) B1 ON B.BOARDNO = B1.BOARDNO) C2 
    ON B.BOARDNO = C2.BOARDNO
    WHERE 1=1 
    	<if test="category != '' and category != null">
    	AND CATEGORY = #{category}
    	</if>  
    	<if test="boardType == 'all'">
   		AND (TITLE LIKE '%' || #{search} || '%' OR USERNAME LIKE '%' || #{search} || '%')      
        </if>
        <if test="boardType == 'title'">
        AND TITLE LIKE '%' || #{search} || '%'
        </if>
        <if test="boardType == 'userName'">
     	AND USERNAME LIKE '%' || #{search} || '%'
        </if>
     	ORDER BY CDATETIME DESC
        OFFSET #{startIndex} ROWS FETCH FIRST #{outputNumber} ROWS ONLY
	</select>
        
        
        
        <!--        <when test="num == 0">
        
        </when>
        <when test="num == 1">
        WHERE CATEGORY = '1'
        </when>
         <when test="num == 2">
        WHERE CATEGORY = '2'
        </when>
         <when test="num == 3">
        WHERE CATEGORY = '3'
        </when>
        <when test="boardType == 'all'">-->
	
	<select id="viewBoard" parameterType="hashmap" resultType="com.example.test1.model.Board">		
								<!--com.example.test1 <- 프로젝트명 / model 밑에 student-->
		SELECT * 
		FROM TBL_BOARD 
		WHERE BOARDNO = #{boardNo} 

	</select>	
	
	<select id ="innerBoard" parameterType="hashmap" resultType="com.example.test1.model.Board">		
	SELECT  C.USERID AS userId,C.CONTENTS AS contents  from TBL_BOARD B 
	INNER JOIN TBL_COMMENT C ON B.BOARDNO = C.BOARDNO
    WHERE B.BOARDNO = #{boardNo}
	</select>
	
	<select id="chartBoard" parameterType="hashmap" resultType="com.example.test1.model.Board">		
								<!--com.example.test1 <- 프로젝트명 / model 밑에 student-->
		SELECT * 
		FROM TBL_PAYMENT

	</select>	
	
	
	<insert id="insertPayment" parameterType="hashmap">
 	
    INSERT INTO PAYMENT
    VALUES (#{merchantUid},#{price},#{merchantUname})
	
	</insert>
	
	<select id="selectArea" parameterType="hashmap" resultType="com.example.test1.model.Board">		
								<!--com.example.test1 <- 프로젝트명 / model 밑에 student-->
		SELECT SI FROM AREA 
		GROUP BY SI 
		ORDER BY SI

	</select>
	
	<select id="selectAreaGu" parameterType="hashmap" resultType="com.example.test1.model.Board">		
								<!--com.example.test1 <- 프로젝트명 / model 밑에 student-->
		SELECT GU
		FROM AREA
		WHERE SI = #{si}
		  AND GU IS NOT NULL
		GROUP BY SI, GU

	</select>
	
	<select id="selectAreaDong" parameterType="hashmap" resultType="com.example.test1.model.Board">		
								<!--com.example.test1 <- 프로젝트명 / model 밑에 student-->
		SELECT DONG
		FROM AREA
		WHERE GU = #{gu} AND SI =#{si}
		 AND DONG IS NOT NULL
		GROUP BY SI, GU, DONG

	</select>
	
	<select id="selectNxNy" parameterType="hashmap" resultType="com.example.test1.model.Board">		
	SELECT * FROM AREA
	WHERE SI =#{si} AND GU =#{gu} AND DONG =#{dong}
	</select>
	
	<insert id="insertBoardFile" parameterType="hashmap" >
		
		INSERT INTO TBL_BOADRFILE 
		VALUES(BOARDFILE_SEQ.NEXTVAL, #{idx},#{fileName},#{fileOrgName},#{filePath},#{fileSize},#{fileExt},'N')
		
	</insert>
	<select id="selectImg" parameterType="hashmap" resultType="com.example.test1.model.Board">		
	
	SELECT * FROM TBL_BOARD B
	INNER JOIN TBL_BOADRFILE T ON B.BOARDNO = T.BOARDNO
	WHERE T.BOARDNO = #{boardNo}
	
	</select>
	
	<delete id="deleteCheckBoard" parameterType="hashmap">
       	DELETE
        FROM TBL_BOARD 
        WHERE BOARDNO IN
    <foreach collection="list" item="item" open="(" close=")" separator=","> #{item}</foreach>
     
    </delete>
    
    <select id="selectItem" parameterType="hashmap" resultType="com.example.test1.model.Board">		
    SELECT * FROM TBL_CODE C
	INNER JOIN TBL_ITEM I ON I.CATEGORY1 = C.CODE
	</select>	
	<select id="ItemCheck" parameterType="hashmap" resultType="com.example.test1.model.Board">
									<!--com.example.test1 <- 프로젝트명 / model 밑에 student-->
	SELECT * FROM TBL_CODE C
	INNER JOIN TBL_ITEM I ON I.CATEGORY1 = C.CODE
	WHERE CODE IN
	<foreach collection="list" item="item" open="(" close=")" separator=","> #{item}</foreach>
	</select>	
	
	
	
</mapper>